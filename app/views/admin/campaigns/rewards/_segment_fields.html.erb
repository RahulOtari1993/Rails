<tr style="border-bottom: 1px solid #414561; padding: 0px 5px;">
  <td scope="row" width="5%" class="remove-btn-align" style="padding-left: 15px !important;">
    <a class="remove-challenge-segment" href="javascript:void(0);">
      <i class="feather icon-minus-circle"></i>
    </a>
  </td>

  <td width="30%">
    <%= select_tag "reward[reward_filters_attributes][#{reward_name_convention(filter)}][reward_event]",
                   options_for_select(RewardFilter::EVENTS.map { |val| [val.humanize, val] },
                    reward_event(filter, RewardFilter::EVENTS.first)),
                   { class: 'form-control challenge-event-dd',
                   required: true }%>
  </td>

  <td width="30%" class="segment-conditions-container">
    <%= select_tag "reward[reward_filters_attributes][#{reward_name_convention(filter)}][reward_condition]",
                   options_for_select(RewardFilter::CONDITIONS.map { |val| [val.humanize, val] }, reward_condition_value(filter, '')), {class: 'form-control segment-conditions-dd segment-conditions-age segment-conditions-points',id: "segment-conditions-dd-#{reward_id_convention(filter)}",
                   prompt: 'Select Condition', disabled: reward_make_disabled(filter, ['age', 'points']),
                   required: true, style: "display:#{reward_make_visible(filter, ['age', 'points'])};"} %>

    <%= select_tag "reward[reward_filters_attributes][#{reward_name_convention(filter)}][reward_condition]",
                   options_for_select([['Has', 'has'], ['Not', 'not']], reward_condition_value(filter, '')),
                   {class: 'form-control segment-conditions-dd segment-conditions-tags segment-conditions-platforms',id: "segment-conditions-dd-#{reward_id_convention(filter)}",
                   disabled: reward_make_disabled(filter, ['tags', 'platforms']),prompt: 'Select Condition', style: "display:#{reward_make_visible(filter, ['tags', 'platforms'])}",
                   required: true }%>

    <%= select_tag "reward[reward_filters_attributes][#{reward_name_convention(filter)}][reward_condition]",
                   options_for_select([['Is', 'is'], ['Not', 'not']], reward_condition_value(filter, '')),
                   {class: 'form-control segment-conditions-dd segment-conditions-gender',
                   id: "segment-conditions-dd-#{reward_id_convention(filter)}", disabled: reward_make_disabled(filter, ['gender']),prompt: 'Select Condition',style: "display:#{reward_make_visible(filter, ['gender'])};",required: true} %>

    <%= select_tag "challenge[challenge_filters_attributes][#{reward_name_convention(filter)}][challenge_condition]",
                   options_for_select([['Is', 'is']], reward_condition_value(filter, 'is')),
                   { class: 'form-control segment-conditions-dd segment-conditions-rewards segment-conditions-challenges', disabled: reward_make_disabled(filter, ['rewards', 'challenge']), style: "display:#{reward_make_visible(filter, ['rewards', 'challenge'])};",id: "segment-conditions-dd-#{reward_id_convention(filter)}",readonly: true } %>

  </td>

  <td width="30%" class="segment-values-container">
    <%= text_field_tag "reward[reward_filters_attributes][#{reward_name_convention(filter)}][reward_value]",
                       reward_event_value(filter, nil, 'age'),
                       class: 'form-control segment-value-age', disabled: reward_make_disabled(filter, ['age']),
                       id: "segment-value-age-#{reward_id_convention(filter)}",
                       placeholder: 'Enter Age', style: "display:#{reward_make_visible(filter, ['age'])};" %>

    <%= text_field_tag "reward[reward_filters_attributes][#{reward_name_convention(filter)}][reward_value]", reward_event_value(filter, nil, 'tags'),
                       class: 'form-control segment-value-tags',disabled: reward_make_disabled(filter, ['tags']),
                       d: "segment-value-tags-#{reward_id_convention(filter)}",
                       placeholder: 'Enter Tag', style: "display:#{reward_make_visible(filter, ['tags'])};" %>

    <%= text_field_tag "reward[reward_filters_attributes][#{reward_name_convention(filter)}][reward_value]", reward_event_value(filter, nil, 'points'),
                       class: 'form-control segment-value-points',disabled: reward_make_disabled(filter, ['points']), id: "segment-value-points-#{reward_id_convention(filter)}", placeholder: 'Enter Points', style: "display:#{reward_make_visible(filter, ['points'])};" %>

    <%= select_tag "reward[reward_filters_attributes][#{reward_name_convention(filter)}][reward_value]",options_for_select(@campaign.rewards.all.pluck(:name, :id),reward_event_value(filter, '', 'rewards')),
                   class: 'form-control segment-value-rewards', disabled: reward_make_disabled(filter, ['rewards']), id: "segment-value-rewards-#{reward_id_convention(filter)}",
                   prompt: 'Select Reward', style: "display:#{reward_make_visible(filter, ['rewards'])};",
                   required: true %>

    <%= select_tag "reward[reward_filters_attributes][#{reward_name_convention(filter)}][reward_value]",
                   options_for_select(@campaign.challenges.all.pluck(:name, :id), reward_event_value(filter, '', 'challenges')),
                   class: 'form-control segment-value-challenges', disabled: reward_make_disabled(filter, ['challenges']), id: "segment-value-challenges-#{reward_id_convention(filter)}",
                   prompt: 'Select Challenge', style: "display:#{reward_make_visible(filter, ['challenge'])};",
                   required: true %>

    <%= select_tag "reward[reward_filters_attributes][#{reward_name_convention(filter)}][reward_value]",
                   options_for_select(RewardFilter::SOCIAL_PLATFORMS.map { |val| [val.humanize, val] },reward_event_value(filter, '', 'platforms')),
                   class: 'form-control segment-conditions-platforms',disabled: reward_make_disabled(filter, ['platforms']), id: "segment-value-platforms-#{reward_id_convention(filter)}",prompt: 'Select Platform', style: "display:#{reward_make_visible(filter, ['platforms'])};",
                   required: true %>

    <%= select_tag "reward[reward_filters_attributes][#{reward_name_convention(filter)}][reward_value]",
                   options_for_select([['Male', 'male'], ['Female', 'female']], reward_event_value(filter, '', 'gender')),
                   class: 'form-control segment-value-gender', disabled: reward_make_disabled(filter, ['gender']),id: "segment-value-gender-#{reward_id_convention(filter)}",
                   prompt: 'Select Gender', style: "display:#{reward_make_visible(filter, ['gender'])};",
                   required: true %>
  </td>
  <% if filter.present? %>
    <!-- Display ID of Challenge Filter Only in Edit Mode-->
    <%= hidden_field_tag "reward[reward_filters_attributes][#{filter.id}][id]", filter.id %>
  <% end %>
</tr>

<!-- ----------------------------------------- FOR BACK ONLY ------------------------------------------------>
<!--<tr id="filter_condition_1" style="border-bottom: 1px solid #414561; padding: 0px 5px;">-->
<!--  <td scope="row" width="5%" class="removARD::EVENTS, :selected => r_f.object.challenge_event), {},
                     {class: "reward_event select2 form-control"})
      %>
<!--    </div>-->
<!--  </td>-->
<!--  <td width="30%">-->
<!--    <div class="form-group">-->
      <%#= r_f.select(:challenge_condition, options_for_select(ChallengeFilter::CONDITIONS, :selected => r_f.object.challenge_condition),
                     {}, {class: "age_reward_condition select2 form-control"})
      %>
      <%#= r_f.select(:challenge_condition, options_for_select(["Has", "Not"], :selected => r_f.object.challenge_condition),
                     {}, {class: "filter_hidden  tags_reward_condition select2 form-control"})
      %>
      <%#= r_f.select(:challenge_condition, options_for_select(["Is", "Not"], :selected => r_f.object.challenge_condition), {},
                     {class: "filter_hidden gender_reward_condition select2 form-control"})
      %>
<!--    </div>-->
<!--  </td>-->
<!--  <td width="30%">-->
<!--    <div class="form-group">-->
      <%#= r_f.text_field :reward_value, class: " reward_value form-control" %>
      <%#= r_f.select(:challenge_value, options_from_collection_for_select(@campaign.rewards.all, :id, :name),
                     {}, {:selected => r_f.object.challenge_value, class: "filter_hidden all_rewards_value select2 form-control"})
      %>
      <%#= r_f.select(:challenge_value, options_for_select(@campaign.rewards, :selected => r_f.object.challenge_value),
                     {}, {class: "filter_hidden all_challenges_value select2 form-control"})
      %>
      <%#= r_f.select(:challenge_value, options_for_select(ChallengeFilter::SOCIAL_PLATFORMS, :selected => r_f.object.challenge_value),
                     {}, {class: "filter_hidden social_reward_value select2 form-control"})
      %>
      <%#= r_f.select(:challenge_value, options_for_select(["Male", "female", "Unknown"], :selected => r_f.object.challenge_value),
                     {}, {class: "filter_hidden gender_value select2 form-control"})
      %>
<!--    </div>-->
<!--  </td>-->
<!--</tr>-->
<!-- ----------------------------------------- FOR BACK ONLY ------------------------------------------------>
